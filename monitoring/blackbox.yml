# Blackbox exporter configuration for GangRun Printing uptime monitoring
modules:
  # HTTP 2xx probe
  http_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        User-Agent: "GangRun-Monitoring/1.0"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: true
      tls_config:
        insecure_skip_verify: false

  # HTTP POST probe for API endpoints
  http_post_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202]
      method: POST
      headers:
        Content-Type: "application/json"
        User-Agent: "GangRun-Monitoring/1.0"
      body: '{"health": "check"}'
      fail_if_not_ssl: true

  # HTTPS probe with certificate validation
  https_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "GangRun-Monitoring/1.0"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: true
      tls_config:
        insecure_skip_verify: false

  # SSL certificate expiry check
  ssl_expire:
    prober: http
    timeout: 10s
    http:
      method: GET
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      headers:
        User-Agent: "GangRun-SSL-Monitor/1.0"
      fail_if_not_ssl: true
      tls_config:
        insecure_skip_verify: false

  # TCP probe for database connections
  tcp_connect:
    prober: tcp
    timeout: 10s

  # ICMP probe for basic connectivity
  icmp:
    prober: icmp
    timeout: 10s
    icmp:
      preferred_ip_protocol: "ip4"

  # DNS probe
  dns:
    prober: dns
    timeout: 10s
    dns:
      query_name: "gangrunprinting.com"
      query_type: "A"
      valid_rcodes:
        - NOERROR
      validate_answer_rrs:
        fail_if_matches_regexp:
          - ".*127.0.0.1"
        fail_if_not_matches_regexp:
          - "gangrunprinting.com.\t300\tIN\tA\t.*"

  # Advanced HTTP probe with response validation
  http_api_check:
    prober: http
    timeout: 15s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        Accept: "application/json"
        User-Agent: "GangRun-API-Monitor/1.0"
      fail_if_not_ssl: true
      fail_if_body_not_matches_regexp:
        - '.*"status"\s*:\s*"ok".*'
      fail_if_header_not_matches_regexp:
        - header: "Content-Type"
          regexp: "application/json.*"

  # Performance-focused HTTP probe
  http_performance:
    prober: http
    timeout: 30s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "GangRun-Performance-Monitor/1.0"
        Cache-Control: "no-cache"
      no_follow_redirects: false
      fail_if_not_ssl: true
      fail_if_body_not_matches_regexp:
        - '.*<title>.*</title>.*'

  # E-commerce specific probes
  ecommerce_health:
    prober: http
    timeout: 20s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "GangRun-ECommerce-Monitor/1.0"
        Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
      fail_if_not_ssl: true
      # Check for key e-commerce elements
      fail_if_body_not_matches_regexp:
        - '.*products.*'
        - '.*cart.*'

  # Admin panel health check
  admin_health:
    prober: http
    timeout: 15s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 302, 401] # Allow redirects to login
      method: GET
      headers:
        User-Agent: "GangRun-Admin-Monitor/1.0"
      fail_if_not_ssl: true
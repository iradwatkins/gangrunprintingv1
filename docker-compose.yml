version: '3.8'

networks:
  printshop_network:
    driver: bridge

services:
  # Main Next.js Application
  app:
    container_name: gangrunprinting_app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://printshop_user:${DB_PASSWORD}@postgres:5432/printshop_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - printshop_network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    container_name: gangrunprinting_postgres
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=printshop_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=printshop_db
      - POSTGRES_MULTIPLE_DATABASES=printshop_db,chatwoot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - printshop_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U printshop_user -d printshop_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    container_name: gangrunprinting_minio
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - printshop_network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Chatwoot Customer Support (Optional)
  chatwoot:
    container_name: gangrunprinting_chatwoot
    image: chatwoot/chatwoot:latest
    restart: unless-stopped
    ports:
      - "3005:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://printshop_user:${DB_PASSWORD}@postgres:5432/chatwoot_db
      - SECRET_KEY_BASE=${CHATWOOT_SECRET}
      - FRONTEND_URL=https://chat.${DOMAIN}
      - ENABLE_ACCOUNT_SIGNUP=false
    networks:
      - printshop_network
    profiles:
      - full

  # Automated PostgreSQL Backups
  postgres_backup:
    container_name: gangrunprinting_backup
    image: prodrigestivill/postgres-backup-local
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=printshop_db
      - POSTGRES_USER=printshop_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=30
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
    volumes:
      - ./backups:/backups
    networks:
      - printshop_network

volumes:
  postgres_data:
  minio_data: